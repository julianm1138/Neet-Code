Valid Anagram
Solved 
Given two strings s and t, return true if the two strings are anagrams of each other, otherwise return false.

An anagram is a string that contains the exact same characters as another string, but the order of the characters can be different.

Example 1:

Input: s = "racecar", t = "carrace"

Output: true
Example 2:

Input: s = "jar", t = "jam"

Output: false
Constraints:

s and t consist of lowercase English letters.


//Decrement object values by 1 for every character of the second string.
//if all the values are 0, it must be an anagram because the count of each value will get used up by looping through the second string and if the count of letters are equal all the new counts should be zero
//So we are essentially comparing the count of each of the first string's letters to the count of the second string's letters. 

isAnagram(s, t) {

 let counts = {};

 for (const letter of s) {
        if (counts[letter] === undefined) {
            counts[letter] = 1;
        } else {
            counts[letter]++;
        }
     }

for (const letter of t) {
    console.log(letter)
    if (!counts[letter]) {    
        return false;
    }
    counts[letter]--;
}

for (let letter in counts) { 
    if (counts[letter] !== 0) return false;
}
return true;        
    }
}
